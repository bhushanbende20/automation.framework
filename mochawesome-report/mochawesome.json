{
  "stats": {
    "suites": 14,
    "tests": 15,
    "passes": 2,
    "pending": 0,
    "failures": 13,
    "start": "2022-02-08T13:44:00.645Z",
    "end": "2022-02-08T13:46:35.927Z",
    "duration": 155282,
    "testsRegistered": 15,
    "passPercent": 13.3,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "5f19793b-72a1-4102-816e-9fa004bae13e",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "43f159e0-a78e-4e4b-9618-7ea7188e51cc",
        "title": "Current Weather Data API - Test Suite",
        "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T1_GetCurrentWeather.js",
        "file": "\\specs\\T1_GetCurrentWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "21dcbb8f-8782-4a34-b276-9146084707dd",
            "title": "Basic Shakedown Tests",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T1_GetCurrentWeather.js",
            "file": "\\specs\\T1_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "fullTitle": "Current Weather Data API - Test Suite Basic Shakedown Tests Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "timedOut": false,
                "duration": 980,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat=0&lon=0&key='+data.ApiKey;\n// console.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n     \nexpect(currentResponseBody.data).to.be.an('array');",
                "err": {
                  "message": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"",
                  "estack": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"\n    at new StatusCodeError (node_modules\\request-promise-core\\lib\\errors.js:32:15)\n    at Request.plumbing.callback (node_modules\\request-promise-core\\lib\\plumbing.js:104:33)\n    at Request.RP$callback [as _callback] (node_modules\\request-promise-core\\lib\\plumbing.js:46:31)\n    at Request.self.callback (node_modules\\request\\request.js:185:22)\n    at Request.emit (node:events:390:28)\n    at Request.<anonymous> (node_modules\\request\\request.js:1161:10)\n    at Request.emit (node:events:390:28)\n    at IncomingMessage.<anonymous> (node_modules\\request\\request.js:1083:12)\n    at Object.onceWrapper (node:events:509:28)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
                },
                "isRoot": false,
                "uuid": "f1177529-d0d3-4e2f-a5d8-a80eec65cdc7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "f1177529-d0d3-4e2f-a5d8-a80eec65cdc7"
            ],
            "pending": [],
            "skipped": [],
            "duration": 980,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "82a9ad50-7ba0-44d8-95c0-a13374840531",
            "title": "Functional Tests",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T1_GetCurrentWeather.js",
            "file": "\\specs\\T1_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "fullTitle": "Current Weather Data API - Test Suite Functional Tests Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "timedOut": false,
                "duration": 840,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat='+data.Current[2].Lat+'&lon='+data.Current[2].Lon+'&key='+data.ApiKey;\n// console.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);/\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n\nexpect(currentResponseBody.data[0]).to.include.any.keys( 'state_code');\n\nexpect(currentResponseBody.data[0].state_code).not.to.be.null;",
                "err": {
                  "message": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"",
                  "estack": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"\n    at new StatusCodeError (node_modules\\request-promise-core\\lib\\errors.js:32:15)\n    at Request.plumbing.callback (node_modules\\request-promise-core\\lib\\plumbing.js:104:33)\n    at Request.RP$callback [as _callback] (node_modules\\request-promise-core\\lib\\plumbing.js:46:31)\n    at Request.self.callback (node_modules\\request\\request.js:185:22)\n    at Request.emit (node:events:390:28)\n    at Request.<anonymous> (node_modules\\request\\request.js:1161:10)\n    at Request.emit (node:events:390:28)\n    at IncomingMessage.<anonymous> (node_modules\\request\\request.js:1083:12)\n    at Object.onceWrapper (node:events:509:28)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
                },
                "isRoot": false,
                "uuid": "39ffdfdb-aac9-48d3-ad55-154492af3d56",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "39ffdfdb-aac9-48d3-ad55-154492af3d56"
            ],
            "pending": [],
            "skipped": [],
            "duration": 840,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "66969175-abbb-4a4a-af47-10bbe198c225",
        "title": "Forecast Weather Data API - Test Suite",
        "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T2_GetForecastWeather.js",
        "file": "\\specs\\T2_GetForecastWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "5f8275ed-5e39-46b4-b744-ddb98a6d6740",
            "title": "Basic Shakedown Tests",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T2_GetForecastWeather.js",
            "file": "\\specs\\T2_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "fullTitle": "Forecast Weather Data API - Test Suite Basic Shakedown Tests Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "timedOut": false,
                "duration": 1682,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code=28546&key='+data.ApiKey;\n// console.log(\"Running Test for Forecast by Postal Code\"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n     \nexpect(forecastResponseBody.data).to.be.an('array');",
                "err": {
                  "message": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"",
                  "estack": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"\n    at new StatusCodeError (node_modules\\request-promise-core\\lib\\errors.js:32:15)\n    at Request.plumbing.callback (node_modules\\request-promise-core\\lib\\plumbing.js:104:33)\n    at Request.RP$callback [as _callback] (node_modules\\request-promise-core\\lib\\plumbing.js:46:31)\n    at Request.self.callback (node_modules\\request\\request.js:185:22)\n    at Request.emit (node:events:390:28)\n    at Request.<anonymous> (node_modules\\request\\request.js:1161:10)\n    at Request.emit (node:events:390:28)\n    at IncomingMessage.<anonymous> (node_modules\\request\\request.js:1083:12)\n    at Object.onceWrapper (node:events:509:28)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
                },
                "isRoot": false,
                "uuid": "fa85fb38-bd58-4d06-88d2-9cbaf0393b11",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "fa85fb38-bd58-4d06-88d2-9cbaf0393b11"
            ],
            "pending": [],
            "skipped": [],
            "duration": 1682,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "a7d0519e-ee45-4d9a-bf9c-6a188568b01e",
            "title": "Functional Tests",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T2_GetForecastWeather.js",
            "file": "\\specs\\T2_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "timedOut": false,
                "duration": 698,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[2].Postal_Code+'&key='+data.ApiKey;\n\n// console.log(\"Running Test for Forecast by Postal Code\"+testData);\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj).to.include.any.keys('timestamp_utc');\n    expect(dataObj.timestamp_utc).not.to.be.null;\n    // console.log(\"timestamp_utc = \"+dataObj.timestamp_utc);\n}",
                "err": {
                  "message": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"",
                  "estack": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"\n    at new StatusCodeError (node_modules\\request-promise-core\\lib\\errors.js:32:15)\n    at Request.plumbing.callback (node_modules\\request-promise-core\\lib\\plumbing.js:104:33)\n    at Request.RP$callback [as _callback] (node_modules\\request-promise-core\\lib\\plumbing.js:46:31)\n    at Request.self.callback (node_modules\\request\\request.js:185:22)\n    at Request.emit (node:events:390:28)\n    at Request.<anonymous> (node_modules\\request\\request.js:1161:10)\n    at Request.emit (node:events:390:28)\n    at IncomingMessage.<anonymous> (node_modules\\request\\request.js:1083:12)\n    at Object.onceWrapper (node:events:509:28)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
                },
                "isRoot": false,
                "uuid": "de8d42da-dd15-41ab-a0fd-6a624c60c55e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "timedOut": false,
                "duration": 697,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[2].Postal_Code+'&key='+data.ApiKey;\n// console.log(\"Running Test for \"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj.weather).to.include.any.keys('icon','code','description');\n    \n    expect(dataObj.weather).not.to.be.null;\n    expect(dataObj.weather.icon).not.to.be.null;\n    expect(dataObj.weather.code).not.to.be.null;\n    expect(dataObj.weather.description).not.to.be.null;\n    // console.log(\"weather = \"+dataObj.weather);\n}",
                "err": {
                  "message": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"",
                  "estack": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"\n    at new StatusCodeError (node_modules\\request-promise-core\\lib\\errors.js:32:15)\n    at Request.plumbing.callback (node_modules\\request-promise-core\\lib\\plumbing.js:104:33)\n    at Request.RP$callback [as _callback] (node_modules\\request-promise-core\\lib\\plumbing.js:46:31)\n    at Request.self.callback (node_modules\\request\\request.js:185:22)\n    at Request.emit (node:events:390:28)\n    at Request.<anonymous> (node_modules\\request\\request.js:1161:10)\n    at Request.emit (node:events:390:28)\n    at IncomingMessage.<anonymous> (node_modules\\request\\request.js:1083:12)\n    at Object.onceWrapper (node:events:509:28)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
                },
                "isRoot": false,
                "uuid": "09b747d3-87e2-4107-ac7c-b07ff454cb87",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "de8d42da-dd15-41ab-a0fd-6a624c60c55e",
              "09b747d3-87e2-4107-ac7c-b07ff454cb87"
            ],
            "pending": [],
            "skipped": [],
            "duration": 1395,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "132df26c-4dc2-429d-b453-f9c335c47dcf",
        "title": "Performance Test Suite",
        "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T3_PerformanceTest.js",
        "file": "\\specs\\T3_PerformanceTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verify Response Time less than 3500 ms per API call when both APIs are called 10times",
            "fullTitle": "Performance Test Suite Verify Response Time less than 3500 ms per API call when both APIs are called 10times",
            "timedOut": false,
            "duration": 849,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "console.log(\"Expected Response Time per Api Request Call = \"+expectedApiResponseTime+\" ms\");\n      \nfor(var i = 0; i < 10; i++) {\n  // console.log(\"Calling APIs in \"+i+\" iteration\")\n  \n  testData1 = data.BaseURL+'current/?lat='+data.Current[i].Lat+'&lon='+data.Current[i].Lon+'&key='+data.ApiKey;\n  testData2 = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[i].Postal_Code+'&key='+data.ApiKey;\n  currentResponse = await Get_CurrentByGPSCoordinates(testData1);\n  forecastResponse = await Get_ForecastByPostalCode(testData2);\n  expect(currentResponse.statusCode).to.equal(200);  \n  expect(currentResponse.elapsedTime).to.lessThan(expectedApiResponseTime);\n  \n  expect(forecastResponse.statusCode).to.equal(200);\n  expect(forecastResponse.elapsedTime).to.lessThan(expectedApiResponseTime);\n  // console.log(\">>> Response Code of \\'Current Weather By GPS Coordinates\\' Api = \"+currentResponse.statusCode);\n  // console.log(\">>> Response Time of \\'Current Weather By GPS Coordinates\\' Api = \"+currentResponse.elapsedTime);\n  // console.log(\">>> Response Time of \\'Forecast Weather By Postal Code\\' Api = \"+forecastResponse.statusCode);\n  // console.log(\">>> Response Time of \\'Forecast Weather By Postal Code\\' Api = \"+forecastResponse.elapsedTime);\n}",
            "err": {
              "message": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"",
              "estack": "StatusCodeError: 403 - \"{\\\"error\\\":\\\"API key not valid, or not yet activated.\\\"}\\n\"\n    at new StatusCodeError (node_modules\\request-promise-core\\lib\\errors.js:32:15)\n    at Request.plumbing.callback (node_modules\\request-promise-core\\lib\\plumbing.js:104:33)\n    at Request.RP$callback [as _callback] (node_modules\\request-promise-core\\lib\\plumbing.js:46:31)\n    at Request.self.callback (node_modules\\request\\request.js:185:22)\n    at Request.emit (node:events:390:28)\n    at Request.<anonymous> (node_modules\\request\\request.js:1161:10)\n    at Request.emit (node:events:390:28)\n    at IncomingMessage.<anonymous> (node_modules\\request\\request.js:1083:12)\n    at Object.onceWrapper (node:events:509:28)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            },
            "isRoot": false,
            "uuid": "96997030-d5fd-4282-a7c1-5e9198fc0c61",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "96997030-d5fd-4282-a7c1-5e9198fc0c61"
        ],
        "pending": [],
        "skipped": [],
        "duration": 849,
        "root": false,
        "rootEmpty": false,
        "_timeout": 500000
      },
      {
        "uuid": "8ff4962b-625a-4204-a195-451f1a17dbce",
        "title": "Rest Countries API - Test Suite",
        "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T4_GetCountry.js",
        "file": "\\specs\\T4_GetCountry.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "3690cf42-410b-4980-ade0-88e86011d90f",
            "title": "Basic Shakedown Tests",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T4_GetCountry.js",
            "file": "\\specs\\T4_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Name' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Name' Api response is OK",
                "timedOut": false,
                "duration": 21109,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "test.data.INPUT_NAME = \"Australia\"\nbyName_response = await Get_ByName(test.data);\nexpect(byName_response.status).to.equal(200);\nexpect(byName_response.data).to.be.an('array');",
                "err": {
                  "message": "Error: connect ETIMEDOUT 15.197.142.173:443",
                  "estack": "Error: connect ETIMEDOUT 15.197.142.173:443\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16)"
                },
                "isRoot": false,
                "uuid": "30db7a61-608b-45a7-91a5-96c67dd0348b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Code' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Code' Api response is OK",
                "timedOut": false,
                "duration": 21053,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"\nbyCode_response = await Get_ByCode(test.data);\nexpect(byCode_response.status).to.equal(200);\nexpect(byCode_response.data).to.include.any.keys( 'name', 'topLevelDomain',\n'alpha2Code','alpha3Code','callingCodes','capital','altSpellings','region',\n'subregion','population','demonym','area','nativeName','numericCode','currencies');",
                "err": {
                  "message": "Error: connect ETIMEDOUT 15.197.142.173:443",
                  "estack": "Error: connect ETIMEDOUT 15.197.142.173:443\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16)"
                },
                "isRoot": false,
                "uuid": "aee7f29c-bbee-421d-95ea-dfb7c3e12e0d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Capital' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Capital' Api response is OK",
                "timedOut": false,
                "duration": 21037,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "test.data.INPUT_CAPITAL = \"Canberra\",\nbyCapital_response = await Get_ByCapital(test.data);\nexpect(byCapital_response.status).to.equal(200);\nexpect(byCapital_response.data).to.be.an('array');",
                "err": {
                  "message": "Error: connect ETIMEDOUT 15.197.142.173:443",
                  "estack": "Error: connect ETIMEDOUT 15.197.142.173:443\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16)"
                },
                "isRoot": false,
                "uuid": "4c60ae97-a24c-4b42-b1d1-0af3a0cc1990",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Region' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Region' Api response is OK",
                "timedOut": false,
                "duration": 21041,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "test.data.INPUT_REGION = \"Oceania\"\nbyRegion_response = await Get_ByRegion(test.data);\nexpect(byRegion_response.status).to.equal(200);\nexpect(byRegion_response.data).to.be.an('array');",
                "err": {
                  "message": "Error: connect ETIMEDOUT 15.197.142.173:443",
                  "estack": "Error: connect ETIMEDOUT 15.197.142.173:443\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16)"
                },
                "isRoot": false,
                "uuid": "92c96b35-b85d-46e9-9489-48993e51f058",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "30db7a61-608b-45a7-91a5-96c67dd0348b",
              "aee7f29c-bbee-421d-95ea-dfb7c3e12e0d",
              "4c60ae97-a24c-4b42-b1d1-0af3a0cc1990",
              "92c96b35-b85d-46e9-9489-48993e51f058"
            ],
            "pending": [],
            "skipped": [],
            "duration": 84240,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "4ff3577a-516a-42c6-9161-5c81b9dd0f4d",
            "title": "Functional Tests",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T4_GetCountry.js",
            "file": "\\specs\\T4_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "timedOut": false,
                "duration": 21036,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"   //Australia\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'name', 'capital',);\nexpect(byCapital_response.data[0]).to.include.any.keys( 'name', 'capital',);\n//Verify capital_name in 'Name Api' using 'Capital Api'\nexpect(byName_response.data[0].capital).to.equal(byCapital_response.data[0].capital);",
                "err": {
                  "message": "Error: connect ETIMEDOUT 15.197.142.173:443",
                  "estack": "Error: connect ETIMEDOUT 15.197.142.173:443\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16)"
                },
                "isRoot": false,
                "uuid": "75983aff-338c-428b-a6ae-f249a29b0367",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 21032,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"CN\"  //CHINA\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'population');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'population',);\n//Verify Population value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.population).to.equal(byName_response.data[0].population);\nexpect(byCode_response.data.population).to.equal(byCapital_response.data[0].population);\nexpect(byName_response.data[0].population).to.equal(byCapital_response.data[0].population);",
                "err": {
                  "message": "Error: connect ETIMEDOUT 15.197.142.173:443",
                  "estack": "Error: connect ETIMEDOUT 15.197.142.173:443\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16)"
                },
                "isRoot": false,
                "uuid": "a9fceede-4541-4e61-838c-63ee7a255929",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 21032,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"PK\"  //PAKISTAN\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'area');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'area',);\n//Verify AREA value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.area).to.equal(byName_response.data[0].area);\nexpect(byCode_response.data.area).to.equal(byCapital_response.data[0].area);\nexpect(byName_response.data[0].area).to.equal(byCapital_response.data[0].area);",
                "err": {
                  "message": "Error: connect ETIMEDOUT 15.197.142.173:443",
                  "estack": "Error: connect ETIMEDOUT 15.197.142.173:443\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16)"
                },
                "isRoot": false,
                "uuid": "254108e1-d8a6-4bf1-a81a-292fc38481ee",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "75983aff-338c-428b-a6ae-f249a29b0367",
              "a9fceede-4541-4e61-838c-63ee7a255929",
              "254108e1-d8a6-4bf1-a81a-292fc38481ee"
            ],
            "pending": [],
            "skipped": [],
            "duration": 63100,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "db87c8fd-1a80-4d4a-abd2-62c9cedd90c8",
        "title": "Postman Echo API Suite - POST",
        "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T5_echoPost.js",
        "file": "\\specs\\T5_echoPost.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "3adf9f3a-d3ce-40f1-a2ed-ae824e30e1db",
            "title": "Basic Test",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T5_echoPost.js",
            "file": "\\specs\\T5_echoPost.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - POST Basic Test Test 1",
                "timedOut": false,
                "duration": 1228,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanPost(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "55c69516-d84c-4763-93b9-cdda19215142",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "55c69516-d84c-4763-93b9-cdda19215142"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1228,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "6edd56ee-6b67-4a95-9f44-6374e6501287",
        "title": "Postman Echo API Suite - GET",
        "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T6_echoGet.js",
        "file": "\\specs\\T6_echoGet.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "d8aa2959-d48b-47d6-b78a-ab2a25279cd8",
            "title": "Basic Test",
            "fullFile": "F:\\2022 Automation Test\\API_TestAutomation\\automation.framework\\specs\\T6_echoGet.js",
            "file": "\\specs\\T6_echoGet.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - GET Basic Test Test 1",
                "timedOut": false,
                "duration": 884,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanGet(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "e31ae6dd-d50c-45a5-be88-f4ec1baee0c3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e31ae6dd-d50c-45a5-be88-f4ec1baee0c3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 884,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2022
}